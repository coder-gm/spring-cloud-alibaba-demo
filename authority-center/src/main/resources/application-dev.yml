server:
  #访问HTTP端口号
  port: 8083
  servlet:
    context-path: "/authority-center"


########################################################
### 指定日志文件
########################################################
logging:
  config: classpath:log4j2.xml



#########################################################
#### Spring配置
#########################################################
spring:

  # DataSource Config
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://47.103.64.174:3306/springcloud_ali_test?useSSL=false&useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&serverTimezone=GMT%2B8
    username: root
    password: Gm859230

    ################################################## Hikari数据库连接池 ##########################################
    hikari:
      pool-name: Retail_HikariCP
      minimum-idle: 3 #最小空闲连接数量
      idle-timeout: 600000 #一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
      maximum-pool-size: 15 #连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
      #auto-commit: true #此属性控制从池返回的连接的默认自动提交行为,默认值：true
      max-lifetime: 1800000 #一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）
      connection-timeout: 30000  #等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException,缺省:30秒
      #connection-test-query: SELECT 1
      #read-only: true #连接只读数据库时配置为true,保证安全

  ################################################## Spring Cloud Alibaba 配置 ##########################################
  cloud:
    nacos:
      discovery:
        enabled: true #如果不想使用Nacos进行服务注册与发现,设置为false即可
        server-addr: 139.196.155.56:8848,139.196.155.56:8858 #服务注册地址
        namespace: 53dc28d0-21c8-46fd-be52-b206940b7f0d #命名空间ID
        metadata:
          management:
            context-path: ${server.servlet.context-path}/actuator

  application:
    name: authority-center #服务名

  thymeleaf:
    check-template: false
    check-template-location: false


################################################### Spring Boot Actuator 配置 ##########################################
# 暴露端点
management:
  endpoints:
    web:
      exposure:
        include: '*'  #需要开放的端点,默认只打开health 和 info 两个端点.通过设置 * ,可以开放所有端点
  endpoint:
    health:
      show-details: always #健康检查是否显示详细信息


########################################################
### mybatis-plus配置
########################################################
mybatis-plus: #对应 MybatisSqlSessionFactoryBean
  check-config-location: false #启动时是否检查 mybatis-config.xml文件的存在,默认不检查
  #config-location: 引入mybatis-config.xml配置文件  和 mybatis-plus.configuration 只能二选一
  #type-aliases-package: #为某个包下的所有类取别名
  #type-handlers-package: #引入自定义类型转换
  #type-aliases-super-type: java.lang.Object
  #configuration-properties: #指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署
  type-enums-package: cn.com.authority.center.model.menus  #枚举类 扫描路径，如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性
  mapper-locations: classpath:mapper/*.xml

  configuration:
    #开启数据库字段与实体类驼峰命名映射
    map-underscore-to-camel-case: true
    #开启mybatis的日志实现,可以在控制台打印输入sql语句 (仅限于开发环境,生产环境要去掉,要不日志量很大)
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config: #对应 GlobalConfig (MyBatisPlus全局策略配置)

    db-config:
      #全局主键生成策略和 @TableId(value = "id", type = IdType.AUTO) 一样使用
      id-type: assign_uuid
